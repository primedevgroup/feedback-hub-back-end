# src/docs/openapi.yaml
openapi: 3.0.0
info:
  title: Feedback Hub API
  version: 1.0.0
paths:
  /auth/signup:
    post:
      summary: Registrar com email e senha
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpBody"
      responses:
        "201":
          description: Usuário criado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
  /auth/signin:
    post:
      summary: Entrar com email e senha
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInBody"
      responses:
        "200":
          description: Token emitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /auth/signin/google:
    post:
      summary: Entrar com o Login Social
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SocialLoginBody"
      responses:
        "200":
          description: Login Social realizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
  /email-verification/send:
    post:
      summary: Enviar email de verificação
      tags:
        - Email
      responses:
        "200":
          description: Email enviado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
  /email-verification/verify:
    post:
      summary: Verificar código
      tags:
        - Email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyCodeBody"
      responses:
        "200":
          description: Código verificado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
  /squads:
    post:
      summary: Criar um novo squad
      tags:
        - Squads
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSquadBody"
      responses:
        "201":
          description: Squad criado com sucesso
    get:
      summary: Buscar squads do usuário
      tags:
        - Squads
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de squads do usuário
          content:
            application/json:
              schema:
                type: object
                properties:
                  squads:
                    type: array
                    items:
                      $ref: "#/components/schemas/SquadResponse"
  /squads/{squadId}/join:
    post:
      summary: Entrar em um squad
      tags:
        - Squads
      security:
        - bearerAuth: []
      parameters:
        - name: squadId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID do squad
      responses:
        "200":
          description: Usuário entrou no squad com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
  /squads/{squadId}/users:
    get:
      summary: Buscar usuários do squad
      tags:
        - Squads
      security:
        - bearerAuth: []
      parameters:
        - name: squadId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          description: ID do squad (formato UUID)
      responses:
        "200":
          description: Lista de usuários do squad
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserResponse"
        "404":
          description: Squad não encontrado
  /squads/{squadId}/update:
    put:
      summary: Atualizar um squad
      tags:
        - Squads
      security:
        - bearerAuth: []
      parameters:
        - name: squadId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID do squad (formato UUID)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSquadBody"
      responses:
        "204":
          description: Squad atualizado com sucesso
        "404":
          description: Squad não encontrado
        "403":
          description: Usuário não tem permissão para atualizar o squad
  /squads/{squadId}/delete:
    delete:
      summary: Deletar um squad
      tags:
        - Squads
      security:
        - bearerAuth: []
      parameters:
        - name: squadId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID do squad (formato UUID)
      responses:
        "204":
          description: Squad deletado com sucesso
        "404":
          description: Squad não encontrado
        "403":
          description: Usuário não tem permissão para deletar o squad
  /feedbacks:
    post:
      summary: Criar um novo feedback
      tags:
        - Feedbacks
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFeedbackBody"
      responses:
        "201":
          description: Feedback criado com sucesso
  /feedbacks/{id}:
    get:
      summary: Buscar feedback por ID
      tags:
        - Feedbacks
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID do feedback
      responses:
        "200":
          description: Feedback encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  feedback:
                    $ref: "#/components/schemas/FeedbackResponse"
  /feedbacks/sent:
    get:
      summary: Buscar feedbacks enviados pelo usuário
      tags:
        - Feedbacks
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de feedbacks enviados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeedbackResponse"
  /feedbacks/received:
    get:
      summary: Buscar feedbacks recebidos pelo usuário
      tags:
        - Feedbacks
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de feedbacks recebidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeedbackResponse"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SignInBody:
      type: object
      description: Dados para login
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: Email do usuário
        password:
          type: string
          description: Senha do usuário
    SignUpBody:
      type: object
      description: Dados para registro
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: Email do usuário
        password:
          type: string
          minLength: 6
          description: Senha do usuário (mínimo 6 caracteres)
    SocialLoginBody:
      type: object
      description: Dados para login social
      required:
        - idToken
      properties:
        provider:
          type: string
          enum:
            - google
          default: google
          description: Provedor de login social
        idToken:
          type: string
          description: Token de autenticação do provedor
    VerifyCodeBody:
      type: object
      description: Dados para verificação de código
      required:
        - code
      properties:
        code:
          type: string
          minLength: 6
          maxLength: 6
          description: Código de verificação (6 caracteres)
    CreateSquadBody:
      type: object
      description: Dados para criar um squad
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          description: Nome do squad
    UpdateSquadBody:
      type: object
      description: Dados para atualizar um squad
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          description: Nome do squad
    CreateFeedbackBody:
      type: object
      description: Dados para criar um feedback
      required:
        - title
        - content
        - targetId
        - squadId
      properties:
        title:
          type: string
          minLength: 1
          description: Título do feedback
        content:
          type: string
          minLength: 1
          description: Conteúdo do feedback
        targetId:
          type: string
          format: uuid
          description: ID do usuário que receberá o feedback
        squadId:
          type: string
          format: uuid
          description: ID do squad onde o feedback será criado
    MessageResponse:
      type: object
      description: Resposta padrão para mensagens
      properties:
        message:
          type: string
          description: Mensagem da resposta
    TokenResponse:
      type: object
      description: Resposta com token de autenticação
      properties:
        token:
          type: string
          description: Token de autenticação
    SquadResponse:
      type: object
      description: Resposta com dados do squad
      properties:
        id:
          type: string
          format: uuid
          description: ID do squad
        name:
          type: string
          description: Nome do squad
        created_at:
          type: string
          format: date-time
          description: Data de criação do squad
        members_count:
          type: integer
          description: Número de membros no squad
    FeedbackResponse:
      type: object
      description: Resposta com dados do feedback
      properties:
        id:
          type: string
          format: uuid
          description: ID do feedback
        title:
          type: string
          description: Título do feedback
        content:
          type: string
          description: Conteúdo do feedback
        created_at:
          type: string
          format: date-time
          description: Data de criação do feedback
        updated_at:
          type: string
          format: date-time
          description: Data da última atualização do feedback
        owner_id:
          type: string
          format: uuid
          description: ID do usuário que criou o feedback
        target_id:
          type: string
          format: uuid
          description: ID do usuário que recebeu o feedback
        squad_id:
          type: string
          format: uuid
          description: ID do squad onde o feedback foi criado
    UserResponse:
      type: object
      description: Dados do usuário
      properties:
        id:
          type: string
          format: uuid
          description: ID do usuário
        googleId:
          type: string
          nullable: true
          description: ID do Google (pode ser null)
        name:
          type: string
          nullable: true
          description: Nome do usuário
        email:
          type: string
          format: email
          description: Email do usuário
        createdAt:
          type: string
          format: date-time
          description: Data de criação da conta
